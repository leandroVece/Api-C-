// <auto-generated />
using System;
using EF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20230126210921_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Salubrity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b5e9399-8e95-4ae8-8745-9542a01e2cc0"),
                            Name = "Asunto domesticos",
                            Salubrity = "Insalubre"
                        },
                        new
                        {
                            Id = new Guid("0a9fa564-0604-4dfa-88df-3636fe395651"),
                            Name = "Actividad recreativa",
                            Salubrity = "sadudable y recomendable"
                        });
                });

            modelBuilder.Entity("EF.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PriorityTask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("TasK", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5d327bf-be98-4786-81d5-0a2412b7807e"),
                            Date = new DateTime(2023, 1, 26, 18, 9, 20, 871, DateTimeKind.Local).AddTicks(2410),
                            IdCategory = new Guid("7b5e9399-8e95-4ae8-8745-9542a01e2cc0"),
                            PriorityTask = "medium",
                            Title = "Limpiar Baño"
                        },
                        new
                        {
                            Id = new Guid("629f9587-abc8-4c85-859f-acb762b754ed"),
                            Date = new DateTime(2023, 1, 26, 18, 9, 20, 871, DateTimeKind.Local).AddTicks(2439),
                            IdCategory = new Guid("0a9fa564-0604-4dfa-88df-3636fe395651"),
                            PriorityTask = "medium",
                            Title = "Practica con el arco"
                        });
                });

            modelBuilder.Entity("EF.Models.Task", b =>
                {
                    b.HasOne("EF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
